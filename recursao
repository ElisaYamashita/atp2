#include <stdio.h>
#include <stdlib.h>
#include <math.h>

//Elisa Yamashita Rodrigues, Renan Alves de Almeida, Vitor Marchini Rolisola



//funcao para identificar numero primo de forma recursiva
/*int primo_recursivo(unsigned int valor, unsigned int divisor){ //os divisores comecam no valor da raiz do numero
    if(divisor <= 1){
        return 1; //Chegou ao fim da recursao sem encontrar divisores
    }
    if(valor % divisor == 0){
        return 0; //Encontrou um divisor, nao e primo
    }
    return primo_recursivo(valor, divisor - 1);
}*/

int primo_recursivo(unsigned int valor, unsigned int divisor){ //os divisores comecam no valor da raiz do numero
    if(divisor*divisor > valor){ // o valor inicial e igual a 1, e nao 3 para que nesse if os valores 3, 5 e 7, com raiz inferior a 3, nao cumpram com a condicao do if quando elevados ao quadrado e retornem resultado 0, ou seja nao primo
        return 1; //Chegou ao fim da recursao sem encontrar divisores
    }
    if(valor % divisor == 0 && divisor!=1){ // e importante que o divisor seja diferente de 1 pois os numeros primos tambem sao divisiveis por 1, de forma que o codigo colocaria todos os numeros como primos nesse caso
        return 0; //Encontrou um divisor, nao e primo
    }
    return primo_recursivo(valor, divisor + 2); // e acescentado 2 ao inves de 1 para que sejam testados somente os numeros impares, dado que nenhum numero e divisivel por um par se esse for divisivel por 2
}

//funcao para identificar numero primo de forma iterativa
int primo_iterativo(unsigned int valor){
    for(unsigned  int i = 3 ; i*i <= valor ; i = i+2){ //a verificacao ocorre apenas com os numeros impares i=3,5,7 etc. dado que se um valor nao e divisivel por 2 não sera divisivel por outros pares.
        if(valor % i == 0){
            return 0; //Encontrou um divisor, nao e primo
        }
    }
    return 1; //Nao encontrou divisor, e primo
}

int main(){
    unsigned int valor;

    do{
        printf("Digite um numero inteiro positivo, 0 para sair:\n");
        scanf("%u", &valor);

        if(valor == 2){ // verificação se o valor é igual ao unico numero primo divisível por 2
            printf("%u e numero primo\n", valor);
        } else if(((valor % 2 == 0) && (valor != 2)) || (valor == 1)){ // verificando se o numero é par
            printf("%u nao e numero primo\n", valor);
        }else{
            /*modo iterativo*/
            if(primo_iterativo(valor)){
                printf("%u e um numero primo (iterativo)\n", valor);
            }else{
                printf("%u nao e um numero primo (iterativo)\n", valor);
            }

            /*modo recursivo*/
            //if(primo_recursivo(valor, sqrt(valor))){
            if(primo_recursivo(valor, 1)){
                printf("%u e um numero primo (recursivo)\n", valor);
            }else{
                printf("%u nao e um numero primo (recursivo)\n", valor);
            }
        }
    }while(valor != 0);

    return 0;
}
